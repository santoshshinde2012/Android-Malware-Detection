package com.extract.dexjar;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

public class UnzipJar {
	  /**
       * Size of the buffer to read/write data
      */
        private static final int BUFFER_SIZE = 4096;

		public static void main(String[] args) throws IOException {
			UnzipJar unzip=new UnzipJar(); 
			unzip.unzipJar("Output/DexJar/AndroidLoginAndRegistration_dex2jar.jar","Output/Src/");
			unzip.unzip("Input/AndroidLoginAndRegistration.apk", "Output/AndroidManifestEncrypt/");
		}
	    private void extractFile(ZipInputStream zipIn, String filePath) throws IOException {
		        BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(filePath));
		        byte[] bytesIn = new byte[BUFFER_SIZE];
		        int read = 0;
		        while ((read = zipIn.read(bytesIn)) != -1) {
		            bos.write(bytesIn, 0, read);
		        }
		        bos.close();
		}
		public void unzip(String zipFilePath, String destDirectory) throws IOException {
			System.out.println("Unzip AndroidMainfest.xml File");
	        File destDir = new File(destDirectory);
	        if (!destDir.exists()) {
	            destDir.mkdir();
	        }
	        ZipInputStream zipIn = new ZipInputStream(new FileInputStream(zipFilePath));
	        ZipEntry entry = zipIn.getNextEntry();
	        // iterates over entries in the zip file
	        while (entry != null) {
	        	if(entry.getName().equalsIgnoreCase("AndroidManifest.xml")){
	        		String filePath = destDirectory + File.separator + entry.getName();
	        		//String filePath = entry.getName();
	        		extractFile(zipIn, filePath);
	        	}
	            zipIn.closeEntry();
	            entry = zipIn.getNextEntry();
	        }
	        zipIn.close();
	    }
		public void unzipJar(String jarPath, String destinationDir) throws IOException {
			System.out.println("Unzip .class Files");
			File destDir = new File(destinationDir);
	        if (!destDir.exists()) {
	            destDir.mkdir();
	        }
			File file = new File(jarPath);
			JarFile jar = new JarFile(file);
	 
			// fist get all directories,
			// then make those directory on the destination Path
			for (Enumeration<JarEntry> enums = jar.entries(); enums.hasMoreElements();) {
				JarEntry entry = (JarEntry) enums.nextElement();
	 
				String fileName = destinationDir + File.separator + entry.getName();
				File f = new File(fileName);
	 
				if (fileName.endsWith("/")) {
					f.mkdirs();
				}
	 
			}
	 
			//now create all files
			for (Enumeration<JarEntry> enums = jar.entries(); enums.hasMoreElements();) {
				JarEntry entry = (JarEntry) enums.nextElement();
	 
				String fileName = destinationDir + File.separator + entry.getName();
				File f = new File(fileName);
	 
				if (!fileName.endsWith("/")) {
					InputStream is = jar.getInputStream(entry);
					FileOutputStream fos = new FileOutputStream(f);
	 
					// write contents of 'is' to 'fos'
					while (is.available() > 0) {
						fos.write(is.read());
					}
	 
					fos.close();
					is.close();
				}
			}
		}
}
